
@book{Di06,
  author    = {Reinhard Diestel},
  title     = {Graphentheorie {(3.} Aufl.)},
  publisher = {Springer},
  address   = {Berlin},
  year      = {2006},
  isbn      = {978-3-540-21391-8},
  timestamp = {Wed, 23 Mar 2011 16:58:38 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/books/daglib/0015993},
  bibsource = {dblp computer science bibliography, http://dblp.org}
@InProceedings{miller:2000:CGP,
  author =	"Julian F. Miller and Peter Thomson",
  title =	"Cartesian Genetic Programming",
  booktitle =	"Genetic Programming, Proceedings of EuroGP'2000",
  year = 	"2000",
  editor =	"Riccardo Poli and Wolfgang Banzhaf and William B.
		 Langdon and Julian F. Miller and Peter Nordin and
		 Terence C. Fogarty",
  volume =	"1802",
  series =	"LNCS",
  pages =	"121--132",
  address =	"Edinburgh",
  publisher_address = "Berlin",
  month =	"15-16 " # apr,
  organisation = "EvoNet",
  publisher =	"Springer-Verlag",
  keywords =	"genetic algorithms, genetic programming, cartesian
		 genetic programming",
  ISBN = 	"3-540-67339-3",
  URL =  	"http://www.elec.york.ac.uk/intsys/users/jfm7/cgp-eurogp2000.pdf",
  URL =  	"http://citeseer.ist.psu.edu/424028.html",
  URL =  	"http://www.springerlink.com/openurl.asp?genre=article&issn=0302-9743&volume=1802&spage=121",
  DOI =  	"doi:10.1007/978-3-540-46239-2_9",
  abstract =	"This paper presents a new form of Genetic Programming
		 called Cartesian Genetic Programming in which a program
		 is represented as an indexed graph. The graph is
		 encoded in the form of a linear string of integers. The
		 inputs or terminal set and node outputs are numbered
		 sequentially. The node functions are also separately
		 numbered. The genotype is just a list of node
		 connections and functions. The genotype is then mapped
		 to an indexed graph that can be executed as a program.
		 Evolutionary algorithms are used to evolve the genotype
		 in a symbolic regression problem (sixth order
		 polynomial) and the Santa Fe Ant Trail. The
		 computational effort is calculated for both cases. It
		 is suggested that hit effort is a more reliable measure
		 of computational efficiency. A neutral search strategy
		 that allows the fittest genotype to be replaced by
		 another equally fit genotype (a neutral genotype) is
		 examined and compared with non-neutral search for the
		 Santa Fe ant problem. The neutral search proves to be
		 much more effective.",
  notes =	"EuroGP'2000, part of \cite{poli:2000:GP}",
  doi-url =	"http://dx.doi.org/10.1007/978-3-540-46239-2_9",
}
@InProceedings{conf/eurogp/GoldmanP13,
  title =	"Reducing Wasted Evaluations in Cartesian Genetic
		 Programming",
  author =	"Brian W. Goldman and William F. Punch",
  bibdate =	"2017-05-19",
  bibsource =	"DBLP,
		 http://dblp.uni-trier.de/https://doi.org/10.1007/978-3-642-37207-0_6;
		 DBLP,
		 http://dblp.uni-trier.de/db/conf/eurogp/eurogp2013.html#GoldmanP13",
  booktitle =	"Genetic Programming - 16th European Conference, EuroGP
		 2013, Vienna, Austria, April 3-5, 2013. Proceedings",
  publisher =	"Springer",
  year = 	"2013",
  volume =	"7831",
  booktitle =	"EuroGP",
  editor =	"Krzysztof Krawiec and Alberto Moraglio and Ting Hu and
		 A. Sima Etaner-Uyar and Bin Hu",
  ISBN = 	"978-3-642-37206-3",
  pages =	"61--72",
  series =	"Lecture Notes in Computer Science",
}
@InProceedings{miller:1999:ACGP,
  author =	"Julian F. Miller",
  title =	"An empirical study of the efficiency of learning
		 boolean functions using a Cartesian Genetic Programming
		 approach",
  booktitle =	"Proceedings of the Genetic and Evolutionary
		 Computation Conference",
  year = 	"1999",
  editor =	"Wolfgang Banzhaf and Jason Daida and Agoston E. Eiben
		 and Max H. Garzon and Vasant Honavar and Mark Jakiela
		 and Robert E. Smith",
  volume =	"2",
  pages =	"1135--1142",
  address =	"Orlando, Florida, USA",
  publisher_address = "San Francisco, CA 94104, USA",
  month =	"13-17 " # jul,
  publisher =	"Morgan Kaufmann",
  keywords =	"genetic programming and evolvable hardware",
  ISBN = 	"1-55860-611-4",
  URL =  	"http://www.cs.bham.ac.uk/~wbl/biblio/gecco1999/GP-411.ps",
  notes =	"GECCO-99 A joint meeting of the eighth international
		 conference on genetic algorithms (ICGA-99) and the
		 fourth annual genetic programming conference (GP-99)",
}
@InProceedings{Husa:2018:EuroGP,
  author =	"Jakub Husa and Roman Kalkreuth",
  title =	"A Comparative Study on Crossover in Cartesian Genetic
		 Programming",
  booktitle =	"EuroGP 2018: Proceedings of the 21st European
		 Conference on Genetic Programming",
  year = 	"2018",
  month =	"4-6 " # apr,
  editor =	"Mauro Castelli and Lukas Sekanina and Mengjie Zhang
		 and Stefano Cagnoni and Pablo Garcia-Sanchez",
  series =	"LNCS",
  volume =	"10781",
  publisher =	"Springer Verlag",
  address =	"Parma, Italy",
  pages =	"203--219",
  organisation = "EvoStar, Species",
  keywords =	"genetic algorithms, genetic programming, Cartesian
		 Genetic Programming: Poster",
  isbn13 =	"978-3-319-77552-4",
  DOI =  	"doi:10.1007/978-3-319-77553-1_13",
  abstract =	"Cartesian Genetic Programming is often used with
		 mutation as the sole genetic operator. Compared to the
		 comprehensive and detailed knowledge about the effect
		 and use of mutation in CGP, the use of crossover has
		 been less investigated and studied. In this paper, we
		 present a comparative study of previously proposed
		 crossover techniques for Cartesian Genetic Programming.
		 This work also includes the proposal of a new crossover
		 technique which swaps block of the CGP phenotype
		 between two selected parents. The experiments of our
		 study open a new perspective on comparative studies on
		 crossover in CGP and its challenges. Our results show
		 that it is possible for a crossover operator to
		 outperform the standard (1+lambda) strategy on a
		 limited number of tasks. The question of finding a
		 universal crossover operator in CGP remains open.",
  notes =	"Part of \cite{Castelli:2018:GP} EuroGP'2018 held in
		 conjunction with EvoCOP2018, EvoMusArt2018 and
		 EvoApplications2018",
  doi-url =	"http://dx.doi.org/10.1007/978-3-319-77553-1_13",
}
@Article{journals/tec/MillerS06,
  title =	"Redundancy and Computational Efficiency in Cartesian
		 Genetic Programming",
  author =	"Julian F. Miller and Stephen L. Smith",
  journal =	"IEEE Trans. Evolutionary Computation",
  year = 	"2006",
  number =	"2",
  volume =	"10",
  bibdate =	"2017-05-17",
  bibsource =	"DBLP,
		 http://dblp.uni-trier.de/https://doi.org/10.1109/TEVC.2006.871253;
		 DBLP,
		 http://dblp.uni-trier.de/db/journals/tec/tec10.html#MillerS06",
  pages =	"167--174",
}
@InProceedings{conf/ki/KaufmannK17,
  title =	"Parametrizing Cartesian Genetic Programming: An
		 Empirical Study",
  author =	"Paul Kaufmann and Roman Kalkreuth",
  booktitle =	"KI 2017: Advances in Artificial Intelligence - 40th
		 Annual German Conference on AI, Dortmund, Germany,
		 September 25-29, 2017, Proceedings",
  publisher =	"Springer",
  year = 	"2017",
  editor =	"Gabriele Kern-Isberner and Johannes Fuernkranz and
		 Matthias Thimm",
  volume =	"10505",
  pages =	"316--322",
  series =	"Lecture Notes in Computer Science",
  keywords =	"genetic algorithms, genetic programming, cartesian
		 genetic programming",
  bibdate =	"2017-09-19",
  bibsource =	"DBLP,
		 http://dblp.uni-trier.de/db/conf/ki/ki2017.html#KaufmannK17",
  DOI =  	"doi:10.1007/978-3-319-67190-1_26",
  isbn13 =	"978-3-319-67189-5",
  doi-url =	"http://dx.doi.org/10.1007/978-3-319-67190-1_26",
}
@Book{koza:gp2,
  author =	"John R. Koza",
  title =	"Genetic Programming II: Automatic Discovery of
		 Reusable Programs",
  publisher =	"MIT Press",
  year = 	"1994",
  address =	"Cambridge Massachusetts",
  month =	may,
  keywords =	"genetic algorithms, genetic programming",
  URL =  	"http://www.genetic-programming.org/gpbook2toc.html",
  broken =	"http://mitpress.mit.edu/catalog/item/default.asp?ttype=2&tid=8307",
  ISBN = 	"0-262-11189-6",
  abstract =	"Genetic Programming II extends the results of John
		 Koza's ground-breaking work on programming by means of
		 natural selection, described in his first book, Genetic
		 Programming. Using a hierarchical approach, Koza shows
		 that complex problems can be solved by breaking them
		 down into smaller, simpler problems using the recently
		 developed technique of automatic function definition in
		 the context of genetic programming. Where conventional
		 techniques of machine learning and artificial
		 intelligence fail to provide an effective means for
		 automatically handling the process of decomposing
		 complex problems into smaller subsets, reassembling the
		 solutions to these subsets, and applying an overall
		 solution to the original problem, automatic function
		 definition enables genetic programming to define useful
		 and reusable subroutines dynamically. Koza illustrates
		 this new technique by showing how it solves (or
		 approximately solves) a variety of problems in Boolean
		 function learning, symbolic regression, control,
		 pattern recognition, robotics, classification, and
		 molecular biology. In each example, the problem is
		 automatically decomposed into subproblems; the
		 subproblems are automatically solved; and the solutions
		 to the subproblems are automatically assembled into a
		 solution to the original problem. Koza shows that
		 leverage accrues because genetic programming with
		 automatic function definition repeatedly uses the
		 solutions to the subproblems in the assembly of the
		 solution to the overall problem. Moreover, genetic
		 programming with automatic function definition produces
		 solutions that are simpler and smaller than the
		 solution obtained without automatic function
		 definition.",
  size = 	"746 pages",
}
@Book{koza:book,
  author =	"John R. Koza",
  title =	"Genetic Programming: On the Programming of Computers
		 by Means of Natural Selection",
  year = 	"1992",
  publisher =	"MIT Press",
  address =	"Cambridge, MA, USA",
  keywords =	"genetic algorithms, genetic programming, text book",
  ISBN = 	"0-262-11170-5",
  URL =  	"http://mitpress.mit.edu/books/genetic-programming",
  abstract =	"Overview Genetic programming may be more powerful than
		 neural networks and other machine learning techniques,
		 able to solve problems in a wider range of disciplines.
		 In this ground-breaking book, John Koza shows how this
		 remarkable paradigm works and provides substantial
		 empirical evidence that solutions to a great variety of
		 problems from many different fields can be found by
		 genetically breeding populations of computer programs.
		 Genetic Programming contains a great many worked
		 examples and includes a sample computer code that will
		 allow readers to run their own programs. In getting
		 computers to solve problems without being explicitly
		 programmed, Koza stresses two points: that seemingly
		 different problems from a variety of fields can be
		 reformulated as problems of program induction, and that
		 the recently developed genetic programming paradigm
		 provides a way to search the space of possible computer
		 programs for a highly fit individual computer program
		 to solve the problems of program induction. Good
		 programs are found by evolving them in a computer
		 against a fitness measure instead of by sitting down
		 and writing them. John R. Koza is Consulting Associate
		 Professor in the Computer Science Department at
		 Stanford University. Endorsements The research reported
		 in this book is a tour de force. For the first time,
		 since the idea was bandied about in the 1940s and early
		 1950s, we have a non-trivial, nontailored set of
		 examples of automatic programming. -- John Holland",
}
@TechReport{koza-90,
  key =  	"Koza",
  author =	"J. Koza",
  title =	"Genetic programming: {A} paradigm for genetically
		 breeding populations of computer programs to solve
		 problems",
  type = 	"Technical Report",
  number =	"{STAN}-{CS}-90-1314",
  institution =  "Dept. of Computer Science, Stanford University",
  keywords =	"genetic algorithms, genetic programming",
  URL =  	"http://www.genetic-programming.com/jkpdf/tr1314.pdf",
  URL =  	"http://www-db.stanford.edu/TR/CS-TR-90-1314.html",
  URL =  	"ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/90/1314/CS-TR-90-1314.pdf",
  month =	jun,
  year = 	"1990",
  size = 	"133 pages",
  notes =	"ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/90/1314
		 also contains GIF and MAC versions",
}
@InProceedings{luke:1997:ccmGP,
  author =	"Sean Luke and Lee Spector",
  title =	"A Comparison of Crossover and Mutation in Genetic
		 Programming",
  booktitle =	"Genetic Programming 1997: Proceedings of the Second
		 Annual Conference",
  editor =	"John R. Koza and Kalyanmoy Deb and Marco Dorigo and
		 David B. Fogel and Max Garzon and Hitoshi Iba and Rick
		 L. Riolo",
  year = 	"1997",
  month =	"13-16 " # jul,
  keywords =	"genetic algorithms, genetic programming",
  pages =	"240--248",
  address =	"Stanford University, CA, USA",
  publisher_address = "San Francisco, CA, USA",
  publisher =	"Morgan Kaufmann",
  URL =  	"http://www.cs.gmu.edu/~sean/papers/comparison/comparison.pdf",
  URL =  	"http://www.cs.gmu.edu/~sean/papers/comparison/comparison.ps.gz",
  abstract =	"This paper presents a large and systematic body of
		 data on the relative effectiveness of mutation,
		 crossover, and combinations of mutation and crossover
		 in genetic programming (GP). The literature of
		 traditional genetic algorithms contains related
		 studies, but mutation and crossover in GP differ from
		 their traditional counterparts in significant ways. In
		 this paper we present the results from a very large
		 experimental data set, the equivalent of approximately
		 12,000 typical runs of a GP system, systematically
		 exploring a range of parameter settings. The resulting
		 data may be useful not only for practitioners seeking
		 to optimize parameters for GP runs, but also for
		 theorists exploring issues such as the role of
		 {"}building blocks{"} in GP.",
  notes =	"GP-97. 6-mux, lawn mower, symbolic regression, Santa
		 Fe trail artificial ant. See alse
		 \cite{luke:1998:rcxmGP}. The Gzipped PostScript version
		 (.ps.gz) does not come with figures; to get the figures
		 for the PostScript version, use the figures URLs
		 below",
  figures =	"http://www.cs.gmu.edu/~sean/papers/comparison/figures1-2.ps.gz",
  figures =	"http://www.cs.gmu.edu/~sean/papers/comparison/figures3-4.ps.gz",
}
@InProceedings{luke:1998:rcxmGP,
  author =	"Sean Luke and Lee Spector",
  title =	"A Revised Comparison of Crossover and Mutation in
		 Genetic Programming",
  booktitle =	"Genetic Programming 1998: Proceedings of the Third
		 Annual Conference",
  year = 	"1998",
  editor =	"John R. Koza and Wolfgang Banzhaf and Kumar
		 Chellapilla and Kalyanmoy Deb and Marco Dorigo and
		 David B. Fogel and Max H. Garzon and David E. Goldberg
		 and Hitoshi Iba and Rick Riolo",
  pages =	"208--213",
  address =	"University of Wisconsin, Madison, Wisconsin, USA",
  publisher_address = "San Francisco, CA, USA",
  month =	"22-25 " # jul,
  publisher =	"Morgan Kaufmann",
  keywords =	"genetic algorithms, genetic programming",
  ISBN = 	"1-55860-548-7",
  URL =  	"http://www.cs.gmu.edu/~sean/papers/revisedgp98.pdf",
  URL =  	"http://www.cs.gmu.edu/~sean/papers/revisedgp98.ps.gz",
  abstract =	"In [Luke and Spector 1997] we presented a
		 comprehensive suite of data comparing GP crossover and
		 point mutation over four domains and a wide range of
		 parameter settings. Unfortunately, the results were
		 marred by statistical flaws. This revision of the study
		 eliminates these flaws, with three times as much the
		 data as the original experiments had. Our results again
		 show that crossover does have some advantage over
		 mutation given the right parameter settings (primarily
		 larger population sizes), though the difference between
		 the two surprisingly small. Further, the results are
		 complex, suggesting that the big picture is more
		 complicated than is commonly believed.",
  notes =	"GP-98 This paper is a revision of a previous paper
		 \cite{luke:1997:ccmGP}, with statistical correction and
		 a considerable new set of data. However, the original
		 also has some data that does not appear here, so you
		 may want to consider getting both. Also: Figures 1
		 through 4 are separated from the rest of the paper in
		 the Gzipped PostScript version (not the PDF version).
		 The figures are listed in the figure URLs below.
		 Finally: if you downloaded a copy of this paper prior
		 to May 20, 1998, its graphs were wrong; get the revised
		 revised version. :-",
  figures =	"http://www.cs.gmu.edu/~sean/papers/revisedgp98graphs.ps.gz",
}
@InProceedings{oai:generic.eprints.org:55371,
  title =	"A rigorous evaluation of crossover and mutation in
		 genetic programming",
  author =	"D. R. White and S. Poulding",
  publisher =	"Springer Verlag",
  year = 	"2009",
  month =	apr,
  abstract =	"The role of crossover and mutation in Genetic
		 Programming (GP) has been the subject of much debate
		 since the emergence of the field. In this paper, we
		 contribute new empirical evidence to this argument
		 using a rigorous and principled experimental method
		 applied to six problems common in the GP literature.
		 The approach tunes the algorithm parameters to enable a
		 fair and objective comparison of two different GP
		 algorithms, the first using a combination of crossover
		 and reproduction, and secondly using a combination of
		 mutation and reproduction. We find that crossover does
		 not significantly outperform mutation on most of the
		 problems examined. In addition, we demonstrate that the
		 use of a straightforward Design of Experiments
		 methodology is effective at tuning GP algorithm
		 parameters.",
  bibsource =	"OAI-PMH server at eprints.gla.ac.uk",
  contributor =  "L. Vanneschi and S. Gustafson and A. Moraglio and I.
		 De Falco and M. Ebner",
  day =  	"15-17",
  oai =  	"oai:generic.eprints.org:55371",
  pages =	"220--231",
  series =	"Lecture Notes in Computer Science",
  subject =	"QA75 Electronic computers. Computer science",
  type = 	"PeerReviewed",
  URL =  	"http://eprints.gla.ac.uk/55371/1/55371.pdf;
		 http://dx.doi.org/10.1007/978-3-642-01181-8_19; White,
		 D.R.
		 <http://eprints.gla.ac.uk/view/author/16438.html>and
		 Poulding, S. (2009) A rigorous evaluation of crossover
		 and mutation in genetic programming. In: Vanneschi, L.,
		 Gustafson, S., Moraglio, A., De Falco, I. and Ebner, M.
		 (eds.) 12th European Conference, EuroGP 2009
		 T{\"u}bingen, Germany, April 15-17, 2009 Proceedings.
		 Series: Lecture Notes in Computer Science, 5481 .
		 Springer Verlag, Germany, pp. 220-231.;
		 http://eprints.gla.ac.uk/55371/",
}
@InProceedings{miller:1999:ACGP,
  author =	"Julian F. Miller",
  title =	"An empirical study of the efficiency of learning
		 boolean functions using a Cartesian Genetic Programming
		 approach",
  booktitle =	"Proceedings of the Genetic and Evolutionary
		 Computation Conference",
  year = 	"1999",
  editor =	"Wolfgang Banzhaf and Jason Daida and Agoston E. Eiben
		 and Max H. Garzon and Vasant Honavar and Mark Jakiela
		 and Robert E. Smith",
  volume =	"2",
  pages =	"1135--1142",
  address =	"Orlando, Florida, USA",
  publisher_address = "San Francisco, CA 94104, USA",
  month =	"13-17 " # jul,
  publisher =	"Morgan Kaufmann",
  keywords =	"genetic programming and evolvable hardware",
  ISBN = 	"1-55860-611-4",
  URL =  	"http://www.cs.bham.ac.uk/~wbl/biblio/gecco1999/GP-411.ps",
  notes =	"GECCO-99 A joint meeting of the eighth international
		 conference on genetic algorithms (ICGA-99) and the
		 fourth annual genetic programming conference (GP-99)",
}